/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra.dicom;

public class Memory {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Memory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Memory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_Memory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Memory() {
    this(imebraJNI.new_Memory__SWIG_0(), true);
  }

  public Memory(int requestedSize) {
    this(imebraJNI.new_Memory__SWIG_1(requestedSize), true);
  }

  public void transfer(Memory transferFrom) {
    imebraJNI.Memory_transfer(swigCPtr, this, Memory.getCPtr(transferFrom), transferFrom);
  }

  public void copyFrom(Memory copyFrom) {
    imebraJNI.Memory_copyFrom(swigCPtr, this, Memory.getCPtr(copyFrom), copyFrom);
  }

  public void clear() {
    imebraJNI.Memory_clear(swigCPtr, this);
  }

  public void resize(int newSize) {
    imebraJNI.Memory_resize(swigCPtr, this, newSize);
  }

  public void reserve(int reserveSize) {
    imebraJNI.Memory_reserve(swigCPtr, this, reserveSize);
  }

  public int size() {
    return imebraJNI.Memory_size(swigCPtr, this);
  }

  public long data(byte[] buffer) {
    return imebraJNI.Memory_data(swigCPtr, this, buffer);
  }

  public void assign(byte[] buffer) {
    imebraJNI.Memory_assign(swigCPtr, this, buffer);
  }

  public boolean empty() {
    return imebraJNI.Memory_empty(swigCPtr, this);
  }

}
